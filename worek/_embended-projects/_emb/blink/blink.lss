
blink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000037e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000003d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000003f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000121  00000000  00000000  0000040d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000c5  00000000  00000000  0000052e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000195  00000000  00000000  000005f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000788  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000a8  00000000  00000000  000007a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000098  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000030  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 bd 01 	jmp	0x37a	; 0x37a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:


#include <avr/io.h>
#include <util/delay.h>               

int main(void)
  80:	8f 92       	push	r8
  82:	9f 92       	push	r9
  84:	af 92       	push	r10
  86:	bf 92       	push	r11
  88:	cf 92       	push	r12
  8a:	df 92       	push	r13
  8c:	ef 92       	push	r14
  8e:	ff 92       	push	r15
  90:	0f 93       	push	r16
  92:	1f 93       	push	r17
  94:	cf 93       	push	r28
  96:	df 93       	push	r29
{
    DDRB  |= _BV(0)|_BV(1);
  98:	84 b1       	in	r24, 0x04	; 4
  9a:	83 60       	ori	r24, 0x03	; 3
  9c:	84 b9       	out	0x04, r24	; 4
    PORTB |=  _BV(0);
  9e:	28 9a       	sbi	0x05, 0	; 5
    PORTB &= ~_BV(1);
  a0:	29 98       	cbi	0x05, 1	; 5
    DDRD  &= ~_BV(0);
  a2:	50 98       	cbi	0x0a, 0	; 10
    PORTD |=  _BV(0);
  a4:	58 9a       	sbi	0x0b, 0	; 11

    while (1) 
    {
        PORTB ^=_BV(0);
  a6:	88 24       	eor	r8, r8
  a8:	83 94       	inc	r8
        PORTB ^=_BV(1);
  aa:	82 e0       	ldi	r24, 0x02	; 2
  ac:	98 2e       	mov	r9, r24
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
  ae:	c8 ec       	ldi	r28, 0xC8	; 200
  b0:	d0 e0       	ldi	r29, 0x00	; 0
    DDRD  &= ~_BV(0);
    PORTD |=  _BV(0);

    while (1) 
    {
        PORTB ^=_BV(0);
  b2:	85 b1       	in	r24, 0x05	; 5
  b4:	88 25       	eor	r24, r8
  b6:	85 b9       	out	0x05, r24	; 5
        PORTB ^=_BV(1);
  b8:	85 b1       	in	r24, 0x05	; 5
  ba:	89 25       	eor	r24, r9
  bc:	85 b9       	out	0x05, r24	; 5
        _delay_ms((PIND & _BV(0))? 1000: 200);
  be:	48 99       	sbic	0x09, 0	; 9
  c0:	0b c0       	rjmp	.+22     	; 0xd8 <main+0x58>
  c2:	0f 2e       	mov	r0, r31
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	af 2e       	mov	r10, r31
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	bf 2e       	mov	r11, r31
  cc:	f8 e4       	ldi	r31, 0x48	; 72
  ce:	cf 2e       	mov	r12, r31
  d0:	f3 e4       	ldi	r31, 0x43	; 67
  d2:	df 2e       	mov	r13, r31
  d4:	f0 2d       	mov	r31, r0
  d6:	0a c0       	rjmp	.+20     	; 0xec <main+0x6c>
  d8:	0f 2e       	mov	r0, r31
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	af 2e       	mov	r10, r31
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	bf 2e       	mov	r11, r31
  e2:	fa e7       	ldi	r31, 0x7A	; 122
  e4:	cf 2e       	mov	r12, r31
  e6:	f4 e4       	ldi	r31, 0x44	; 68
  e8:	df 2e       	mov	r13, r31
  ea:	f0 2d       	mov	r31, r0
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  ec:	c6 01       	movw	r24, r12
  ee:	b5 01       	movw	r22, r10
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	4a ef       	ldi	r20, 0xFA	; 250
  f6:	54 e4       	ldi	r21, 0x44	; 68
  f8:	0e 94 32 01 	call	0x264	; 0x264 <__mulsf3>
  fc:	7b 01       	movw	r14, r22
  fe:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	40 e8       	ldi	r20, 0x80	; 128
 106:	5f e3       	ldi	r21, 0x3F	; 63
 108:	0e 94 b1 00 	call	0x162	; 0x162 <__cmpsf2>
 10c:	88 23       	and	r24, r24
 10e:	1c f4       	brge	.+6      	; 0x116 <main+0x96>
 110:	61 e0       	ldi	r22, 0x01	; 1
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	22 c0       	rjmp	.+68     	; 0x15a <main+0xda>
		__ticks = 1;
	else if (__tmp > 65535)
 116:	c8 01       	movw	r24, r16
 118:	b7 01       	movw	r22, r14
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	3f ef       	ldi	r19, 0xFF	; 255
 11e:	4f e7       	ldi	r20, 0x7F	; 127
 120:	57 e4       	ldi	r21, 0x47	; 71
 122:	0e 94 2e 01 	call	0x25c	; 0x25c <__gesf2>
 126:	18 16       	cp	r1, r24
 128:	a4 f4       	brge	.+40     	; 0x152 <main+0xd2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 12a:	c6 01       	movw	r24, r12
 12c:	b5 01       	movw	r22, r10
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	40 e2       	ldi	r20, 0x20	; 32
 134:	51 e4       	ldi	r21, 0x41	; 65
 136:	0e 94 32 01 	call	0x264	; 0x264 <__mulsf3>
 13a:	0e 94 b5 00 	call	0x16a	; 0x16a <__fixunssfsi>
 13e:	05 c0       	rjmp	.+10     	; 0x14a <main+0xca>
 140:	ce 01       	movw	r24, r28
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <main+0xc2>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 146:	61 50       	subi	r22, 0x01	; 1
 148:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14a:	61 15       	cp	r22, r1
 14c:	71 05       	cpc	r23, r1
 14e:	c1 f7       	brne	.-16     	; 0x140 <main+0xc0>
 150:	b0 cf       	rjmp	.-160    	; 0xb2 <main+0x32>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 152:	c8 01       	movw	r24, r16
 154:	b7 01       	movw	r22, r14
 156:	0e 94 b5 00 	call	0x16a	; 0x16a <__fixunssfsi>
 15a:	cb 01       	movw	r24, r22
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	f1 f7       	brne	.-4      	; 0x15c <main+0xdc>
 160:	a8 cf       	rjmp	.-176    	; 0xb2 <main+0x32>

00000162 <__cmpsf2>:
 162:	2f d0       	rcall	.+94     	; 0x1c2 <__fp_cmp>
 164:	08 f4       	brcc	.+2      	; 0x168 <__cmpsf2+0x6>
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	08 95       	ret

0000016a <__fixunssfsi>:
 16a:	57 d0       	rcall	.+174    	; 0x21a <__fp_splitA>
 16c:	88 f0       	brcs	.+34     	; 0x190 <__fixunssfsi+0x26>
 16e:	9f 57       	subi	r25, 0x7F	; 127
 170:	90 f0       	brcs	.+36     	; 0x196 <__fixunssfsi+0x2c>
 172:	b9 2f       	mov	r27, r25
 174:	99 27       	eor	r25, r25
 176:	b7 51       	subi	r27, 0x17	; 23
 178:	a0 f0       	brcs	.+40     	; 0x1a2 <__fixunssfsi+0x38>
 17a:	d1 f0       	breq	.+52     	; 0x1b0 <__fixunssfsi+0x46>
 17c:	66 0f       	add	r22, r22
 17e:	77 1f       	adc	r23, r23
 180:	88 1f       	adc	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	1a f0       	brmi	.+6      	; 0x18c <__fixunssfsi+0x22>
 186:	ba 95       	dec	r27
 188:	c9 f7       	brne	.-14     	; 0x17c <__fixunssfsi+0x12>
 18a:	12 c0       	rjmp	.+36     	; 0x1b0 <__fixunssfsi+0x46>
 18c:	b1 30       	cpi	r27, 0x01	; 1
 18e:	81 f0       	breq	.+32     	; 0x1b0 <__fixunssfsi+0x46>
 190:	5e d0       	rcall	.+188    	; 0x24e <__fp_zero>
 192:	b1 e0       	ldi	r27, 0x01	; 1
 194:	08 95       	ret
 196:	5b c0       	rjmp	.+182    	; 0x24e <__fp_zero>
 198:	67 2f       	mov	r22, r23
 19a:	78 2f       	mov	r23, r24
 19c:	88 27       	eor	r24, r24
 19e:	b8 5f       	subi	r27, 0xF8	; 248
 1a0:	39 f0       	breq	.+14     	; 0x1b0 <__fixunssfsi+0x46>
 1a2:	b9 3f       	cpi	r27, 0xF9	; 249
 1a4:	cc f3       	brlt	.-14     	; 0x198 <__fixunssfsi+0x2e>
 1a6:	86 95       	lsr	r24
 1a8:	77 95       	ror	r23
 1aa:	67 95       	ror	r22
 1ac:	b3 95       	inc	r27
 1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__fixunssfsi+0x3c>
 1b0:	3e f4       	brtc	.+14     	; 0x1c0 <__fixunssfsi+0x56>
 1b2:	90 95       	com	r25
 1b4:	80 95       	com	r24
 1b6:	70 95       	com	r23
 1b8:	61 95       	neg	r22
 1ba:	7f 4f       	sbci	r23, 0xFF	; 255
 1bc:	8f 4f       	sbci	r24, 0xFF	; 255
 1be:	9f 4f       	sbci	r25, 0xFF	; 255
 1c0:	08 95       	ret

000001c2 <__fp_cmp>:
 1c2:	99 0f       	add	r25, r25
 1c4:	00 08       	sbc	r0, r0
 1c6:	55 0f       	add	r21, r21
 1c8:	aa 0b       	sbc	r26, r26
 1ca:	e0 e8       	ldi	r30, 0x80	; 128
 1cc:	fe ef       	ldi	r31, 0xFE	; 254
 1ce:	16 16       	cp	r1, r22
 1d0:	17 06       	cpc	r1, r23
 1d2:	e8 07       	cpc	r30, r24
 1d4:	f9 07       	cpc	r31, r25
 1d6:	c0 f0       	brcs	.+48     	; 0x208 <__fp_cmp+0x46>
 1d8:	12 16       	cp	r1, r18
 1da:	13 06       	cpc	r1, r19
 1dc:	e4 07       	cpc	r30, r20
 1de:	f5 07       	cpc	r31, r21
 1e0:	98 f0       	brcs	.+38     	; 0x208 <__fp_cmp+0x46>
 1e2:	62 1b       	sub	r22, r18
 1e4:	73 0b       	sbc	r23, r19
 1e6:	84 0b       	sbc	r24, r20
 1e8:	95 0b       	sbc	r25, r21
 1ea:	39 f4       	brne	.+14     	; 0x1fa <__fp_cmp+0x38>
 1ec:	0a 26       	eor	r0, r26
 1ee:	61 f0       	breq	.+24     	; 0x208 <__fp_cmp+0x46>
 1f0:	23 2b       	or	r18, r19
 1f2:	24 2b       	or	r18, r20
 1f4:	25 2b       	or	r18, r21
 1f6:	21 f4       	brne	.+8      	; 0x200 <__fp_cmp+0x3e>
 1f8:	08 95       	ret
 1fa:	0a 26       	eor	r0, r26
 1fc:	09 f4       	brne	.+2      	; 0x200 <__fp_cmp+0x3e>
 1fe:	a1 40       	sbci	r26, 0x01	; 1
 200:	a6 95       	lsr	r26
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	81 1d       	adc	r24, r1
 206:	81 1d       	adc	r24, r1
 208:	08 95       	ret

0000020a <__fp_split3>:
 20a:	57 fd       	sbrc	r21, 7
 20c:	90 58       	subi	r25, 0x80	; 128
 20e:	44 0f       	add	r20, r20
 210:	55 1f       	adc	r21, r21
 212:	59 f0       	breq	.+22     	; 0x22a <__fp_splitA+0x10>
 214:	5f 3f       	cpi	r21, 0xFF	; 255
 216:	71 f0       	breq	.+28     	; 0x234 <__fp_splitA+0x1a>
 218:	47 95       	ror	r20

0000021a <__fp_splitA>:
 21a:	88 0f       	add	r24, r24
 21c:	97 fb       	bst	r25, 7
 21e:	99 1f       	adc	r25, r25
 220:	61 f0       	breq	.+24     	; 0x23a <__fp_splitA+0x20>
 222:	9f 3f       	cpi	r25, 0xFF	; 255
 224:	79 f0       	breq	.+30     	; 0x244 <__fp_splitA+0x2a>
 226:	87 95       	ror	r24
 228:	08 95       	ret
 22a:	12 16       	cp	r1, r18
 22c:	13 06       	cpc	r1, r19
 22e:	14 06       	cpc	r1, r20
 230:	55 1f       	adc	r21, r21
 232:	f2 cf       	rjmp	.-28     	; 0x218 <__fp_split3+0xe>
 234:	46 95       	lsr	r20
 236:	f1 df       	rcall	.-30     	; 0x21a <__fp_splitA>
 238:	08 c0       	rjmp	.+16     	; 0x24a <__fp_splitA+0x30>
 23a:	16 16       	cp	r1, r22
 23c:	17 06       	cpc	r1, r23
 23e:	18 06       	cpc	r1, r24
 240:	99 1f       	adc	r25, r25
 242:	f1 cf       	rjmp	.-30     	; 0x226 <__fp_splitA+0xc>
 244:	86 95       	lsr	r24
 246:	71 05       	cpc	r23, r1
 248:	61 05       	cpc	r22, r1
 24a:	08 94       	sec
 24c:	08 95       	ret

0000024e <__fp_zero>:
 24e:	e8 94       	clt

00000250 <__fp_szero>:
 250:	bb 27       	eor	r27, r27
 252:	66 27       	eor	r22, r22
 254:	77 27       	eor	r23, r23
 256:	cb 01       	movw	r24, r22
 258:	97 f9       	bld	r25, 7
 25a:	08 95       	ret

0000025c <__gesf2>:
 25c:	b2 df       	rcall	.-156    	; 0x1c2 <__fp_cmp>
 25e:	08 f4       	brcc	.+2      	; 0x262 <__gesf2+0x6>
 260:	8f ef       	ldi	r24, 0xFF	; 255
 262:	08 95       	ret

00000264 <__mulsf3>:
 264:	0b d0       	rcall	.+22     	; 0x27c <__mulsf3x>
 266:	78 c0       	rjmp	.+240    	; 0x358 <__fp_round>
 268:	69 d0       	rcall	.+210    	; 0x33c <__fp_pscA>
 26a:	28 f0       	brcs	.+10     	; 0x276 <__mulsf3+0x12>
 26c:	6e d0       	rcall	.+220    	; 0x34a <__fp_pscB>
 26e:	18 f0       	brcs	.+6      	; 0x276 <__mulsf3+0x12>
 270:	95 23       	and	r25, r21
 272:	09 f0       	breq	.+2      	; 0x276 <__mulsf3+0x12>
 274:	5a c0       	rjmp	.+180    	; 0x32a <__fp_inf>
 276:	5f c0       	rjmp	.+190    	; 0x336 <__fp_nan>
 278:	11 24       	eor	r1, r1
 27a:	ea cf       	rjmp	.-44     	; 0x250 <__fp_szero>

0000027c <__mulsf3x>:
 27c:	c6 df       	rcall	.-116    	; 0x20a <__fp_split3>
 27e:	a0 f3       	brcs	.-24     	; 0x268 <__mulsf3+0x4>

00000280 <__mulsf3_pse>:
 280:	95 9f       	mul	r25, r21
 282:	d1 f3       	breq	.-12     	; 0x278 <__mulsf3+0x14>
 284:	95 0f       	add	r25, r21
 286:	50 e0       	ldi	r21, 0x00	; 0
 288:	55 1f       	adc	r21, r21
 28a:	62 9f       	mul	r22, r18
 28c:	f0 01       	movw	r30, r0
 28e:	72 9f       	mul	r23, r18
 290:	bb 27       	eor	r27, r27
 292:	f0 0d       	add	r31, r0
 294:	b1 1d       	adc	r27, r1
 296:	63 9f       	mul	r22, r19
 298:	aa 27       	eor	r26, r26
 29a:	f0 0d       	add	r31, r0
 29c:	b1 1d       	adc	r27, r1
 29e:	aa 1f       	adc	r26, r26
 2a0:	64 9f       	mul	r22, r20
 2a2:	66 27       	eor	r22, r22
 2a4:	b0 0d       	add	r27, r0
 2a6:	a1 1d       	adc	r26, r1
 2a8:	66 1f       	adc	r22, r22
 2aa:	82 9f       	mul	r24, r18
 2ac:	22 27       	eor	r18, r18
 2ae:	b0 0d       	add	r27, r0
 2b0:	a1 1d       	adc	r26, r1
 2b2:	62 1f       	adc	r22, r18
 2b4:	73 9f       	mul	r23, r19
 2b6:	b0 0d       	add	r27, r0
 2b8:	a1 1d       	adc	r26, r1
 2ba:	62 1f       	adc	r22, r18
 2bc:	83 9f       	mul	r24, r19
 2be:	a0 0d       	add	r26, r0
 2c0:	61 1d       	adc	r22, r1
 2c2:	22 1f       	adc	r18, r18
 2c4:	74 9f       	mul	r23, r20
 2c6:	33 27       	eor	r19, r19
 2c8:	a0 0d       	add	r26, r0
 2ca:	61 1d       	adc	r22, r1
 2cc:	23 1f       	adc	r18, r19
 2ce:	84 9f       	mul	r24, r20
 2d0:	60 0d       	add	r22, r0
 2d2:	21 1d       	adc	r18, r1
 2d4:	82 2f       	mov	r24, r18
 2d6:	76 2f       	mov	r23, r22
 2d8:	6a 2f       	mov	r22, r26
 2da:	11 24       	eor	r1, r1
 2dc:	9f 57       	subi	r25, 0x7F	; 127
 2de:	50 40       	sbci	r21, 0x00	; 0
 2e0:	8a f0       	brmi	.+34     	; 0x304 <__mulsf3_pse+0x84>
 2e2:	e1 f0       	breq	.+56     	; 0x31c <__mulsf3_pse+0x9c>
 2e4:	88 23       	and	r24, r24
 2e6:	4a f0       	brmi	.+18     	; 0x2fa <__mulsf3_pse+0x7a>
 2e8:	ee 0f       	add	r30, r30
 2ea:	ff 1f       	adc	r31, r31
 2ec:	bb 1f       	adc	r27, r27
 2ee:	66 1f       	adc	r22, r22
 2f0:	77 1f       	adc	r23, r23
 2f2:	88 1f       	adc	r24, r24
 2f4:	91 50       	subi	r25, 0x01	; 1
 2f6:	50 40       	sbci	r21, 0x00	; 0
 2f8:	a9 f7       	brne	.-22     	; 0x2e4 <__mulsf3_pse+0x64>
 2fa:	9e 3f       	cpi	r25, 0xFE	; 254
 2fc:	51 05       	cpc	r21, r1
 2fe:	70 f0       	brcs	.+28     	; 0x31c <__mulsf3_pse+0x9c>
 300:	14 c0       	rjmp	.+40     	; 0x32a <__fp_inf>
 302:	a6 cf       	rjmp	.-180    	; 0x250 <__fp_szero>
 304:	5f 3f       	cpi	r21, 0xFF	; 255
 306:	ec f3       	brlt	.-6      	; 0x302 <__mulsf3_pse+0x82>
 308:	98 3e       	cpi	r25, 0xE8	; 232
 30a:	dc f3       	brlt	.-10     	; 0x302 <__mulsf3_pse+0x82>
 30c:	86 95       	lsr	r24
 30e:	77 95       	ror	r23
 310:	67 95       	ror	r22
 312:	b7 95       	ror	r27
 314:	f7 95       	ror	r31
 316:	e7 95       	ror	r30
 318:	9f 5f       	subi	r25, 0xFF	; 255
 31a:	c1 f7       	brne	.-16     	; 0x30c <__mulsf3_pse+0x8c>
 31c:	fe 2b       	or	r31, r30
 31e:	88 0f       	add	r24, r24
 320:	91 1d       	adc	r25, r1
 322:	96 95       	lsr	r25
 324:	87 95       	ror	r24
 326:	97 f9       	bld	r25, 7
 328:	08 95       	ret

0000032a <__fp_inf>:
 32a:	97 f9       	bld	r25, 7
 32c:	9f 67       	ori	r25, 0x7F	; 127
 32e:	80 e8       	ldi	r24, 0x80	; 128
 330:	70 e0       	ldi	r23, 0x00	; 0
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	08 95       	ret

00000336 <__fp_nan>:
 336:	9f ef       	ldi	r25, 0xFF	; 255
 338:	80 ec       	ldi	r24, 0xC0	; 192
 33a:	08 95       	ret

0000033c <__fp_pscA>:
 33c:	00 24       	eor	r0, r0
 33e:	0a 94       	dec	r0
 340:	16 16       	cp	r1, r22
 342:	17 06       	cpc	r1, r23
 344:	18 06       	cpc	r1, r24
 346:	09 06       	cpc	r0, r25
 348:	08 95       	ret

0000034a <__fp_pscB>:
 34a:	00 24       	eor	r0, r0
 34c:	0a 94       	dec	r0
 34e:	12 16       	cp	r1, r18
 350:	13 06       	cpc	r1, r19
 352:	14 06       	cpc	r1, r20
 354:	05 06       	cpc	r0, r21
 356:	08 95       	ret

00000358 <__fp_round>:
 358:	09 2e       	mov	r0, r25
 35a:	03 94       	inc	r0
 35c:	00 0c       	add	r0, r0
 35e:	11 f4       	brne	.+4      	; 0x364 <__fp_round+0xc>
 360:	88 23       	and	r24, r24
 362:	52 f0       	brmi	.+20     	; 0x378 <__fp_round+0x20>
 364:	bb 0f       	add	r27, r27
 366:	40 f4       	brcc	.+16     	; 0x378 <__fp_round+0x20>
 368:	bf 2b       	or	r27, r31
 36a:	11 f4       	brne	.+4      	; 0x370 <__fp_round+0x18>
 36c:	60 ff       	sbrs	r22, 0
 36e:	04 c0       	rjmp	.+8      	; 0x378 <__fp_round+0x20>
 370:	6f 5f       	subi	r22, 0xFF	; 255
 372:	7f 4f       	sbci	r23, 0xFF	; 255
 374:	8f 4f       	sbci	r24, 0xFF	; 255
 376:	9f 4f       	sbci	r25, 0xFF	; 255
 378:	08 95       	ret

0000037a <_exit>:
 37a:	f8 94       	cli

0000037c <__stop_program>:
 37c:	ff cf       	rjmp	.-2      	; 0x37c <__stop_program>
